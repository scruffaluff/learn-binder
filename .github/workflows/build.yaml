# GitHub Actions workflow file.
#
# For more information, visit
# https://docs.github.com/actions/learn-github-actions.

name: build

# Trigger workflow on any push or pull request.
on:
  pull_request:
    branches:
      - "**"
  push:
    branches:
      - "**"

jobs:
  lint:
    name: Check code with formatter and linter
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code repository
        uses: actions/checkout@v2
      - name: Install Apt packages
        run: sudo apt install libcairo2-dev libpango1.0-dev ffmpeg
      - name: Install Node interpreter
        uses: actions/setup-node@v2
        with:
          node-version: 16
      - name: Install Prettier formatter
        run: npm install -g prettier
      - name: Check configuration file formatting
        run: prettier --check
      - name: Install Python interpreter
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Cache Python packages
        uses: actions/cache@v2
        with:
          path: .venv
          key: >-
            python-3.9_${{ runner.os }}_poetry-${{ hashFiles('poetry.lock') }}
      - name: Install Python packages
        run: |
          python -m pip install --upgrade pip poetry setuptools wheel
          poetry config virtualenvs.in-project true
          poetry install -v
      - name: Run linter checks
        run: |
          poetry run bandit -ilr src/
          poetry run black --check .
          poetry run flake8 .
          poetry run nbqa flake8 .
          poetry run mypy --install-types --non-interactive .
          poetry run nbqa mypy --install-types --non-interactive .

  test:
    name: Run test suite for Python 3.9 on Ubuntu
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code repository
        uses: actions/checkout@v2
      - name: Install Apt packages
        run: sudo apt install libcairo2-dev libpango1.0-dev ffmpeg
      - name: Install Python interpreter
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Cache Python packages
        uses: actions/cache@v2
        with:
          path: .venv
          key: >-
            python-3.9_${{ runner.os }}_poetry-${{ hashFiles('poetry.lock') }}
      - name: Install Python packages
        run: |
          python -m pip install --upgrade pip poetry setuptools wheel
          poetry config virtualenvs.in-project true
          poetry install -v
      - name: Run test suite
        run: poetry run pytest
